tags:
  - Contacts
summary: Get list of contacts
operationId: getContacts
description: Retrieve a paginated and sorted list of contacts.
security:
  - bearerAuth: []
parameters:
  - in: query
    name: page
    description: Page number for pagination
    schema:
      type: integer
      example: 1
  - in: query
    name: perPage
    description: Number of contacts per page
    schema:
      type: integer
      example: 10
  - in: query
    name: sortBy
    description: Field by which to sort the contacts
    schema:
      type: string
      enum: [_id, name, phoneNumber, contactType, createdAt]
      example: name
  - in: query
    name: sortOrder
    description: Sorting order (ascending or descending)
    schema:
      type: string
      enum: [asc, desc]
      example: asc
responses:
  '200':
    description: Successfully retrieved the contacts list
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: 'Successfully found contacts!'
            data:
              type: object
              required:
                - contacts
                - page
                - perPage
                - totalItems
                - totalPages
              properties:
                contacts:
                  type: array
                  items:
                    $ref: '../../components/schemas/contact.yaml'
                page:
                  type: integer
                  example: 1
                perPage:
                  type: integer
                  example: 10
                totalItems:
                  type: integer
                  example: 50
                totalPages:
                  type: integer
                  example: 5
  '401':
    description: Unauthorized. Token is missing or invalid.
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 401
            message:
              type: string
              example: 'Unauthorized. Please provide a valid token.'
